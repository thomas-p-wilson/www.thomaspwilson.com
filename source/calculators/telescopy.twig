---
layout: default
title: Telescopy Calculators
---

{% set fluid = true %}

{% block content %}
  {% verbatim %}

  <section class="section-padded" id="telescopy-calculators">

    <p>The calculators found on this page may be used to determine the various properties of different types of telescopes and their components.</p>

    <form class="form-horizontal">
      <div class="row section-padded">
        <div class="col-md-4 col-md-offset-4">
          <div class="form-group">
            <label for="type" class="col-md-4 col-sm-12 control-label">Type</label>
            <div class="col-md-8 col-sm-12">
              <select name="type" v-model="type" class="form-control">
                <option value="cassegrain">Cassegrain</option>
              </select>
            </div>
          </div>

          <div class="form-group">
            <label for="unit_of_measure" class="col-md-4 col-sm-12 control-label">Unit of Measure</label>
            <div class="col-md-8 col-sm-12">
              <select name="unit_of_measure" v-model="unit_of_measure" class="form-control">
                <option value="mm">Millimetres</option>
                <option value="cm">Centimetres</option>
                <option value="m">Metres</option>
                <option value="in">Inches</option>
                <option value="ft">Feet</option>
              </select>
              <select name="unit_of_weight" v-model="unit_of_weight" class="form-control">
                <option value="g">Grams</option>
                <option value="kg">Kilograms</option>
                <option value="lb">Pounds</option>
              </select>
              <select name="unit_of_rotation" v-model="unit_of_rotation" class="form-control">
                <option value="deg">Degrees</option>
                <option value="rad">Radians</option>
                <option value="rps">Revolutions Per Second</option>
                <option value="rpm">Revolutions Per Minute</option>
              </select>
            </div>
          </div>
        </div>
      </div>

      <div class="row">
        <!--
        System info
        -->
        <div class="col-md-4 col-sm-12">
          <h3>System</h3>
          <div class="form-group">
            <label for="aperture_diameter" class="col-md-4 col-sm-12 control-label">Aperture Diameter <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="aperture_diameter" class="form-control">
                <span class="input-group-addon">{{ unit_of_measure }}</span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The diameter of the objective aperture determines the amount of light allowed to enter the telescope. Larger apertures allow more light to enter the telescope. Aperture size directly affects focal ratio and other properties of the telescope.</p>
            </div>
          </div>
          <div class="form-group">
            <label for="aperture_radius" class="col-md-4 col-sm-12 control-label">Aperture Radius</label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="aperture_radius" class="form-control" disabled="disabled">
                <span class="input-group-addon">{{ unit_of_measure }}</span>
              </div>
            </div>
          </div>
          <div class="form-group">
            <label for="aperture_area" class="col-md-4 col-sm-12 control-label">Aperture Area <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="aperture_area" class="form-control" disabled="disabled">
                <span class="input-group-addon">{{ unit_of_measure }}<sup>2</sup></span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The formula to determine aperture area is the formula for the area of a circle: \\(a = \pi r^2\\)</p>
            </div>
          </div>
          <div class="form-group">
            <label for="system_focal_length" class="col-md-4 col-sm-12 control-label">Focal Length <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="system_focal_length" @change="_expected_system_focal_length = this" class="form-control">
                <span class="input-group-addon">{{ unit_of_measure }}</span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The expected focal length of the system helps determine mirror parameters and focal ratio.</p>
            </div>
          </div>
          <div class="form-group">
            <label for="system_focal_ratio" class="col-md-4 col-sm-12 control-label">Focal Ratio <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <input type="number" v-model="system_focal_ratio" class="form-control" disabled="disabled">
            </div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The focal ratio of the system is the ratio of the focal length to the aperture diameter. Smaller focal ratios indicate a larger aperture, delivering greater illuminance to the focal plane.</p>
            </div>
          </div>
        </div>

        <!--
        Primary Mirror Info
        -->
        <div class="col-md-4 col-sm-12">
          <h3>Primary</h3>

          <div class="form-group">
            <label for="primary_type" class="col-md-4 col-sm-12 control-label">Type <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <select name="primary_type" v-model="primary_type" class="form-control">
                <option value="spherical">Spherical</option>
                <option value="paraboloid">Paraboloid</option>
              </select>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The diameter of the primary is typically the same as the aperture diameter.</p>
            </div>
          </div>

          <div class="form-group">
            <label for="primary_diameter" class="col-md-4 col-sm-12 control-label">Diameter <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="primary_diameter" class="form-control" disabled="disabled">
                <span class="input-group-addon">{{ unit_of_measure }}</span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The diameter of the primary is typically the same as the aperture diameter.</p>
            </div>
          </div>

          <div class="form-group">
            <label for="primary_focal_length" class="col-md-4 col-sm-12 control-label">Focal Length <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="primary_focal_length" class="form-control">
                <span class="input-group-addon">{{ unit_of_measure }}</span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The focal length of the primary mirror. Typcially twice the primary diameter.</p>
            </div>
          </div>

          <div class="form-group">
            <label for="primary_focal_ratio" class="col-md-4 col-sm-12 control-label">Focal Ratio <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <input type="number" v-model="primary_focal_ratio" class="form-control" disabled="disabled">
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The formula for the [focal ratio][focal ratio] or f-number is \\(N = \dfrac{f}{D}\\)</p>
            </div>
          </div>

          <div class="form-group">
            <label for="primary_thickness" class="col-md-4 col-sm-12 control-label">Blank Thickness <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="primary_thickness" class="form-control">
                <span class="input-group-addon">{{ unit_of_measure }}</span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The blank thickness used for the primary mirror. Used in determining weight, volume, etc.</p>
            </div>
          </div>

          <div class="form-group">
            <label for="primary_depth" class="col-md-4 col-sm-12 control-label">Depth <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="primary_depth" class="form-control" disabled="disabled">
                <span class="input-group-addon">{{ unit_of_measure }}</span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The depth from the paraboloid vertex to the rim of the mirror. The formula to calculate the depth of the dish is \\(h = \dfrac{1}{2g}w^2r^2\\)</p>
            </div>
          </div>

          <div class="form-group">
            <label for="primary_area" class="col-md-4 col-sm-12 control-label">Surface Area <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="primary_area" class="form-control" disabled="disabled">
                <span class="input-group-addon">{{ unit_of_measure }}<sup>2</sup></span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The area of the concave primary mirror. The formula to determine the concave surface area is \\(a = \dfrac{\pi r}{6d^2}\times((r^2 + 4d^2)^{3/2}-r^3)\\)</p>
            </div>
          </div>

          <div class="form-group">
            <label for="primary_dish_volume" class="col-md-4 col-sm-12 control-label">Dish Volume <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="primary_dish_volume" class="form-control" disabled="disabled">
                <span class="input-group-addon">{{ unit_of_measure }}<sup>3</sup></span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The volume of the dish formed by the paraboloidal mirror. The formula for the volume of a paraboloid is \\(v = \dfrac{1}{2}pr^2d\\).</p>
            </div>
          </div>

          <div class="form-group">
            <label for="primary_material_volume" class="col-md-4 col-sm-12 control-label">Material Volume <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="primary_material_volume" class="form-control" disabled="disabled">
                <span class="input-group-addon">{{ unit_of_measure }}<sup>3</sup></span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">A rough estimate of the volume of the material used to create the mirror.</p>
            </div>
          </div>

          <div class="form-group">
            <label for="primary_mass" class="col-md-4 col-sm-12 control-label">Mass <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="primary_mass" class="form-control" disabled="disabled">
                <span class="input-group-addon">{{ unit_of_weight }}</span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">A rough estimate of the mass of the material required to construct the primary mirror.</p>
            </div>
          </div>

          <div class="form-group" v-if="primary_type === 'paraboloid'">
            <label for="primary_cast_spin" class="col-md-4 col-sm-12 control-label">Cast Rotation <a class="info"><i class="fa fa-info-circle"></i></a></label>
            <div class="col-md-8 col-sm-12">
              <div class="input-group">
                <input type="number" v-model="primary_cast_spin" class="form-control" disabled="disabled">
                <span class="input-group-addon">{{ unit_of_rotation }}</span>
              </div>
            </div>
            <div class="clearfix"></div>
            <div class="row">
              <p class="alert alert-info" style="display: none">The angular velocity with which the mirror must be rotated in order to achieve the desired focal length during spin-casting.

<br><br>

- *r* represent the radius of the rim of the mirror, in centimetres
- *f* represent the focal length of the mirror from the vertex, in centimetres
- *h* represent the height of an imaginary parcel above a zero to be defined in the calculation
- *w* represent the angular velocity of the liquid's rotation, in radians per second
- *g* represent the acceleration due to gravity, in centimetres

\\[
  \begin{align}
    r^2 &= 4fh \\\
        &= 4f\dfrac{1}{2g}w^2r^2 \\\
      1 &= 4f\dfrac{1}{2g}w^2 \\\
     2g &= 4fw^2 \\\
      g &= 2fw^2
  \end{align}
\\]

So for example, if I want to cast a 50cm (~20 inch) mirror with a focal length
of 180cm (~6 feet), we plug in:

- *r* = 25cm
- *f* = 180cm
- *g* ~ 981cm

\\[
  \begin{align}
       g &= 2fw^2 \\\
     981 &= 2\times180w^2 \\\
         &= 360w^2 \\\
     w^2 &= \dfrac{981}{360} \\\
       w &= \sqrt{2.725} \\\
       w &= 1.6507574
  \end{align}
\\]
              </p>
            </div>
          </div>


          <div class="panel panel-default">
            <h3>Radii of Curvature</h3>

            <p>Primary: {{ primary_radius_of_curvature }}</p>
            <p>R1 = -((2DF)/(F-B))</p>
            <p>Secondary: {{ secondary_radius_of_curvature }}</p>
            <p>R2 = -((2DB)/(F-B-D))</p>
          </div>
        </div>

        <!--
        Secondary Mirror Info
        -->
        <div class="col-md-4 col-sm-12">
          <h3>Secondary</h3>

          <div class="panel panel-default">
            <h3>Conic Constant of Secondary</h3>
            <p>{{ secondary_conic_constant }}</p>
            <p>K2 is chosen to shift the focus to the desired location:
              <span>K2 = -1 - a - sqrt(a(a+2))</span>
              <br><br>
              Where a:
              a = (1/2) * ((4DBM) / ((F + BM - DM)(F - B - D)))^2
            </p>
            <p>Secondary Magnification: M = (F - B) / D</p>
          </div>
        </div>
    </form>

  </section>

  {% endverbatim %}
{% endblock %}

{% block scripts_after %}
  <script src="//cdnjs.cloudflare.com/ajax/libs/vue/1.0.3/vue.js"></script>
  <script>window.Vue || document.write('<script src="{{ site.url }}/assets/javascripts/vue.js"><\/script>')</script>
  <script>
  Vue.config.debug = true;

  const G = 9.80665; // m/s^2

  new Vue({
    el: '#telescopy-calculators',
    data: {
      type: 'cassegrain',
      unit_of_measure: 'cm',
      unit_of_weight: 'kg',
      unit_of_rotation: 'rpm',

      // System
      aperture_diameter: 30.5, // ~12 inches
      system_focal_length: 305, // 5x expected telescope length

      // Primary
      primary_type: 'paraboloid',
      primary_focal_length: 61, // aperture * 2
      primary_thickness: 2,



      back_focal_length: 15, // ~6 inches
      mirror_distance: 60
    },
    computed: {
      //
      // System
      //
      aperture_radius: function() {
        return this.aperture_diameter / 2;
      },
      aperture_area: function() {
        return Math.PI * Math.pow(this.aperture_radius, 2);
      },
      system_focal_ratio: function() {
        return this.system_focal_length / this.aperture_diameter;
      },

      //
      // Primary
      //
      primary_diameter: function() {
        return this.aperture_diameter;
      },
      primary_radius: function() {
        return this.primary_diameter / 2;
      },
      primary_focal_ratio: function() {
        return this.primary_focal_length / this.primary_diameter;
      },
      primary_depth: function() {
        if (this.primary_type === 'spherical') {
          return this.primary_focal_length - Math.sqrt(Math.pow(this.primary_focal_length, 2) - Math.pow(this.primary_radius, 2));
        }
        if (this.primary_type === 'paraboloid') {
          return Math.pow(this.primary_radius, 2) / (4 * this.primary_focal_length);
        }
      },
      primary_area: function() {
        var r = this.primary_radius;
        var r2 = Math.pow(r, 2);
        var d = this.primary_depth;

        if (this.primary_type === 'spherical') {
          return 2 * Math.PI * r * d;
        }
        if (this.primary_type === 'paraboloid') {
          return ((Math.PI * r) / (6 * Math.pow(d, 2))) * (Math.pow((r2 + (4 * Math.pow(d, 2))), 3/2) - Math.pow(r, 3));
        }
      },
      primary_dish_volume: function() {
        var r = this.primary_radius;
        var d = this.primary_depth;
        if (this.primary_type === 'spherical') {
          return ((Math.PI * d) / 6) * (3 * Math.pow(r, 2) + Math.pow(d, 2));
        }
        if (this.primary_type === 'paraboloid') { // We know the exact formula for paraboloidal volume
          return (Math.PI * Math.pow(r, 2) * d) / 2;
        }
      },
      primary_material_volume: function() {
        var r = this.primary_radius;
        var t = this.primary_thickness;
        var v = this.primary_dish_volume;

        return (Math.PI * Math.pow(r, 2) * t) - v;
      },
      primary_mass: function() {
        var volume = convert(this.primary_material_volume, this.unit_of_measure).to('cm', 3);
        return convert(volume * 28, 'g').to(this.unit_of_weight); // Assuming glass for mirror material
      },
      primary_cast_spin: function() {
        var rad = Math.sqrt(convert(G,'m').to(this.unit_of_measure) / (this.primary_focal_length * 2));
        if ('rpm' === this.unit_of_rotation) {
          return 0.159155 * rad * 60;
        }
        return convert(rad, 'rad').to(this.unit_of_rotation);
      },
      primary_radius_of_curvature: function() {
        return -((2 * this.mirror_distance * this.expected_system_focal_length) / (this.expected_system_focal_length - this.back_focal_length))
      },
      secondary_radius_of_curvature: function() {
        return -((2 * this.mirror_distance * this.back_focal_length) / (this.expected_system_focal_length - this.back_focal_length - this.mirror_distance));
      }
      // secondary_conic_constant: function() {
      //   var a = .5 * Math.pow((4DBM)/((F + BM - DM) * (F - B - D)), 2)

      //   return -1 * a - Math.sqrt(a * (a + 2));
      // }
    },
    watch: {
      unit_of_measure: function(newVal, oldVal) {
        console.log('From: ', oldVal, ' to: ', newVal);
        this.aperture_diameter = convert(this.aperture_diameter, oldVal).to(newVal);
        this.system_focal_length = convert(this.system_focal_length, oldVal).to(newVal);
        this.primary_focal_length = convert(this.primary_focal_length, oldVal).to(newVal);
        this.primary_thickness = convert(this.primary_thickness, oldVal).to(newVal);
      },
      unit_of_weight: function(newVal, oldVal) {
        console.log('From: ', oldVal, ' to: ', newVal);
      },
      unit_of_rotation: function(newVal, oldVal) {
        console.log('From: ', oldVal, ' to: ', newVal);
      }
    }
  });

  $('.info').on('click', function(){
    $(this).closest('.form-group').find('.alert-info').toggle();
  });

  //
  //
  //
  function convert(value, unit) {
    var table = {};

    // Initialization
    this.value = value;
    this.currentUnit = unit;

    /**
     * Convert the value to the given unit.
     */
    this.to = function(unit, exp) {
      this.targetUnit = unit;

      // First convert from the current value to the base unit
      var target = table[this.targetUnit];
      var current = table[this.currentUnit];
      if (target.base != current.base) {
        console.log('Incompatible units; cannot convert from "' + this.currentUnit + '" to "' + this.targetUnit + '"');
        throw new Error('Incompatible units; cannot convert from "' + this.currentUnit + '" to "' + this.targetUnit + '"');
      }
      return this.value * Math.pow((current.multiplier / target.multiplier), exp || 1);
    };

    this.addUnit = function(base, actual, multiplier) {
      table[actual] = { base: base, actual: actual, multiplier: multiplier };
    };

    // Initialize the table
    var prefixes = ['Y', 'Z', 'E', 'P', 'T', 'G', 'M', 'k', 'h', 'da', '', 'd', 'c', 'm', 'u', 'n', 'p', 'f', 'a', 'z', 'y'];
    var factors =  [ 24,  21,  18,  15,  12,  9,   6,   3,   2,   1,    0, -1,  -2,  -3,  -6,  -9,  -12, -15, -18, -21, -24];
    // SI units only, that follow the mg/kg/dg/cg type of format
    var units = ['g', 'b', 'l', 'm'];

    for (var j = 0; j < units.length; j++) {
        var base = units[j];
        for (var i = 0; i < prefixes.length; i++) {
            this.addUnit(base, prefixes[i] + base, Math.pow(10, factors[i]));
        }
    }

    // add some defaults
    this.addUnit('g', 'ounce', 28.3495231);
    this.addUnit('g', 'oz', 28.3495231);
    this.addUnit('g', 'pound', 453.59237);
    this.addUnit('g', 'lb', 453.59237);

    this.addUnit('m', 'in', 0.0254);
    this.addUnit('m', 'ft', 0.3048);

    this.addUnit('deg', 'rad', 57.296);
    this.addUnit('deg', 'rps', 360);

    return this;
  };
  </script>
{% endblock %}